//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WindowsFormsApp2
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class HSC_Verification_2022Entities1 : DbContext
    {
        public HSC_Verification_2022Entities1()
            : base("name=HSC_Verification_2022Entities1")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Tbl_Daily_Verify> Tbl_Daily_Verify { get; set; }
        public virtual DbSet<Tbl_Daily_Verify_Complete> Tbl_Daily_Verify_Complete { get; set; }
        public virtual DbSet<Tbl_Migration> Tbl_Migration { get; set; }
        public virtual DbSet<Tbl_Payment> Tbl_Payment { get; set; }
        public virtual DbSet<Tbl_Verification> Tbl_Verification { get; set; }
        public virtual DbSet<Tbl_Verification_1> Tbl_Verification_1 { get; set; }
        public virtual DbSet<Tbl_Verification_Pri> Tbl_Verification_Pri { get; set; }
        public virtual DbSet<Tbl_Verification_Pri_1> Tbl_Verification_Pri_1 { get; set; }
        public virtual DbSet<Tbl_College_Email> Tbl_College_Email { get; set; }
        public virtual DbSet<Tbl_Div_Details> Tbl_Div_Details { get; set; }
        public virtual DbSet<Tbl_Division_Block> Tbl_Division_Block { get; set; }
        public virtual DbSet<Tbl_Migration_Pri> Tbl_Migration_Pri { get; set; }
        public virtual DbSet<Tbl_Payment_1> Tbl_Payment_1 { get; set; }
        public virtual DbSet<Tbl_Payment_Error> Tbl_Payment_Error { get; set; }
        public virtual DbSet<Tbl_Student_Subject> Tbl_Student_Subject { get; set; }
        public virtual DbSet<Tbl_Student_Subject_1> Tbl_Student_Subject_1 { get; set; }
    
        public virtual int SP_GET_STUD_MARKSHEET(string seat_No, Nullable<int> div_Code)
        {
            var seat_NoParameter = seat_No != null ?
                new ObjectParameter("Seat_No", seat_No) :
                new ObjectParameter("Seat_No", typeof(string));
    
            var div_CodeParameter = div_Code.HasValue ?
                new ObjectParameter("Div_Code", div_Code) :
                new ObjectParameter("Div_Code", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_GET_STUD_MARKSHEET", seat_NoParameter, div_CodeParameter);
        }
    
        public virtual int SP_INSERT_PENDING_SUBJECT(string aCTION, string seat_No, Nullable<int> div_code, Nullable<int> payment_Head, string unique_ID_Payment, string unique_ID_Seat_No, string case_No, Nullable<int> pre_Ref_ID, ObjectParameter rESULT)
        {
            var aCTIONParameter = aCTION != null ?
                new ObjectParameter("ACTION", aCTION) :
                new ObjectParameter("ACTION", typeof(string));
    
            var seat_NoParameter = seat_No != null ?
                new ObjectParameter("Seat_No", seat_No) :
                new ObjectParameter("Seat_No", typeof(string));
    
            var div_codeParameter = div_code.HasValue ?
                new ObjectParameter("Div_code", div_code) :
                new ObjectParameter("Div_code", typeof(int));
    
            var payment_HeadParameter = payment_Head.HasValue ?
                new ObjectParameter("Payment_Head", payment_Head) :
                new ObjectParameter("Payment_Head", typeof(int));
    
            var unique_ID_PaymentParameter = unique_ID_Payment != null ?
                new ObjectParameter("Unique_ID_Payment", unique_ID_Payment) :
                new ObjectParameter("Unique_ID_Payment", typeof(string));
    
            var unique_ID_Seat_NoParameter = unique_ID_Seat_No != null ?
                new ObjectParameter("Unique_ID_Seat_No", unique_ID_Seat_No) :
                new ObjectParameter("Unique_ID_Seat_No", typeof(string));
    
            var case_NoParameter = case_No != null ?
                new ObjectParameter("Case_No", case_No) :
                new ObjectParameter("Case_No", typeof(string));
    
            var pre_Ref_IDParameter = pre_Ref_ID.HasValue ?
                new ObjectParameter("Pre_Ref_ID", pre_Ref_ID) :
                new ObjectParameter("Pre_Ref_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_INSERT_PENDING_SUBJECT", aCTIONParameter, seat_NoParameter, div_codeParameter, payment_HeadParameter, unique_ID_PaymentParameter, unique_ID_Seat_NoParameter, case_NoParameter, pre_Ref_IDParameter, rESULT);
        }
    
        public virtual int SP_INSERT_STUDENT_DATA(string aCTION, string seat_No, Nullable<int> div_code, Nullable<int> payment_Head, string unique_ID_Payment, string unique_ID_Seat_No, Nullable<int> pre_Ref_ID, ObjectParameter rESULT)
        {
            var aCTIONParameter = aCTION != null ?
                new ObjectParameter("ACTION", aCTION) :
                new ObjectParameter("ACTION", typeof(string));
    
            var seat_NoParameter = seat_No != null ?
                new ObjectParameter("Seat_No", seat_No) :
                new ObjectParameter("Seat_No", typeof(string));
    
            var div_codeParameter = div_code.HasValue ?
                new ObjectParameter("Div_code", div_code) :
                new ObjectParameter("Div_code", typeof(int));
    
            var payment_HeadParameter = payment_Head.HasValue ?
                new ObjectParameter("Payment_Head", payment_Head) :
                new ObjectParameter("Payment_Head", typeof(int));
    
            var unique_ID_PaymentParameter = unique_ID_Payment != null ?
                new ObjectParameter("Unique_ID_Payment", unique_ID_Payment) :
                new ObjectParameter("Unique_ID_Payment", typeof(string));
    
            var unique_ID_Seat_NoParameter = unique_ID_Seat_No != null ?
                new ObjectParameter("Unique_ID_Seat_No", unique_ID_Seat_No) :
                new ObjectParameter("Unique_ID_Seat_No", typeof(string));
    
            var pre_Ref_IDParameter = pre_Ref_ID.HasValue ?
                new ObjectParameter("Pre_Ref_ID", pre_Ref_ID) :
                new ObjectParameter("Pre_Ref_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_INSERT_STUDENT_DATA", aCTIONParameter, seat_NoParameter, div_codeParameter, payment_HeadParameter, unique_ID_PaymentParameter, unique_ID_Seat_NoParameter, pre_Ref_IDParameter, rESULT);
        }
    
        public virtual ObjectResult<SP_INSERT_STUDENT_DATA_PRI_Result> SP_INSERT_STUDENT_DATA_PRI(string aCTION, string seat_No, Nullable<int> payment_Head, Nullable<int> div_Code, string address, string taluka, string district, string pincode, string mobile_No, string email_ID, string delivery_Mode, Nullable<double> charge, Nullable<double> total_Payment, string sUB1, string sUB2, string sUB3, string sUB4, string sUB5, string sUB6, string sUB7, string unique_ID_Payment, string unique_ID_Seat_No)
        {
            var aCTIONParameter = aCTION != null ?
                new ObjectParameter("ACTION", aCTION) :
                new ObjectParameter("ACTION", typeof(string));
    
            var seat_NoParameter = seat_No != null ?
                new ObjectParameter("Seat_No", seat_No) :
                new ObjectParameter("Seat_No", typeof(string));
    
            var payment_HeadParameter = payment_Head.HasValue ?
                new ObjectParameter("Payment_Head", payment_Head) :
                new ObjectParameter("Payment_Head", typeof(int));
    
            var div_CodeParameter = div_Code.HasValue ?
                new ObjectParameter("Div_Code", div_Code) :
                new ObjectParameter("Div_Code", typeof(int));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var talukaParameter = taluka != null ?
                new ObjectParameter("Taluka", taluka) :
                new ObjectParameter("Taluka", typeof(string));
    
            var districtParameter = district != null ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(string));
    
            var pincodeParameter = pincode != null ?
                new ObjectParameter("Pincode", pincode) :
                new ObjectParameter("Pincode", typeof(string));
    
            var mobile_NoParameter = mobile_No != null ?
                new ObjectParameter("Mobile_No", mobile_No) :
                new ObjectParameter("Mobile_No", typeof(string));
    
            var email_IDParameter = email_ID != null ?
                new ObjectParameter("Email_ID", email_ID) :
                new ObjectParameter("Email_ID", typeof(string));
    
            var delivery_ModeParameter = delivery_Mode != null ?
                new ObjectParameter("Delivery_Mode", delivery_Mode) :
                new ObjectParameter("Delivery_Mode", typeof(string));
    
            var chargeParameter = charge.HasValue ?
                new ObjectParameter("Charge", charge) :
                new ObjectParameter("Charge", typeof(double));
    
            var total_PaymentParameter = total_Payment.HasValue ?
                new ObjectParameter("Total_Payment", total_Payment) :
                new ObjectParameter("Total_Payment", typeof(double));
    
            var sUB1Parameter = sUB1 != null ?
                new ObjectParameter("SUB1", sUB1) :
                new ObjectParameter("SUB1", typeof(string));
    
            var sUB2Parameter = sUB2 != null ?
                new ObjectParameter("SUB2", sUB2) :
                new ObjectParameter("SUB2", typeof(string));
    
            var sUB3Parameter = sUB3 != null ?
                new ObjectParameter("SUB3", sUB3) :
                new ObjectParameter("SUB3", typeof(string));
    
            var sUB4Parameter = sUB4 != null ?
                new ObjectParameter("SUB4", sUB4) :
                new ObjectParameter("SUB4", typeof(string));
    
            var sUB5Parameter = sUB5 != null ?
                new ObjectParameter("SUB5", sUB5) :
                new ObjectParameter("SUB5", typeof(string));
    
            var sUB6Parameter = sUB6 != null ?
                new ObjectParameter("SUB6", sUB6) :
                new ObjectParameter("SUB6", typeof(string));
    
            var sUB7Parameter = sUB7 != null ?
                new ObjectParameter("SUB7", sUB7) :
                new ObjectParameter("SUB7", typeof(string));
    
            var unique_ID_PaymentParameter = unique_ID_Payment != null ?
                new ObjectParameter("Unique_ID_Payment", unique_ID_Payment) :
                new ObjectParameter("Unique_ID_Payment", typeof(string));
    
            var unique_ID_Seat_NoParameter = unique_ID_Seat_No != null ?
                new ObjectParameter("Unique_ID_Seat_No", unique_ID_Seat_No) :
                new ObjectParameter("Unique_ID_Seat_No", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_INSERT_STUDENT_DATA_PRI_Result>("SP_INSERT_STUDENT_DATA_PRI", aCTIONParameter, seat_NoParameter, payment_HeadParameter, div_CodeParameter, addressParameter, talukaParameter, districtParameter, pincodeParameter, mobile_NoParameter, email_IDParameter, delivery_ModeParameter, chargeParameter, total_PaymentParameter, sUB1Parameter, sUB2Parameter, sUB3Parameter, sUB4Parameter, sUB5Parameter, sUB6Parameter, sUB7Parameter, unique_ID_PaymentParameter, unique_ID_Seat_NoParameter);
        }
    
        public virtual int SP_INSERT_STUDENT_MIGRATION(string aCTION, string seat_No, Nullable<int> div_Code, string unique_ID_Payment, string unique_ID_Seat_No, Nullable<int> pre_Ref_ID, ObjectParameter result)
        {
            var aCTIONParameter = aCTION != null ?
                new ObjectParameter("ACTION", aCTION) :
                new ObjectParameter("ACTION", typeof(string));
    
            var seat_NoParameter = seat_No != null ?
                new ObjectParameter("Seat_No", seat_No) :
                new ObjectParameter("Seat_No", typeof(string));
    
            var div_CodeParameter = div_Code.HasValue ?
                new ObjectParameter("Div_Code", div_Code) :
                new ObjectParameter("Div_Code", typeof(int));
    
            var unique_ID_PaymentParameter = unique_ID_Payment != null ?
                new ObjectParameter("Unique_ID_Payment", unique_ID_Payment) :
                new ObjectParameter("Unique_ID_Payment", typeof(string));
    
            var unique_ID_Seat_NoParameter = unique_ID_Seat_No != null ?
                new ObjectParameter("Unique_ID_Seat_No", unique_ID_Seat_No) :
                new ObjectParameter("Unique_ID_Seat_No", typeof(string));
    
            var pre_Ref_IDParameter = pre_Ref_ID.HasValue ?
                new ObjectParameter("Pre_Ref_ID", pre_Ref_ID) :
                new ObjectParameter("Pre_Ref_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_INSERT_STUDENT_MIGRATION", aCTIONParameter, seat_NoParameter, div_CodeParameter, unique_ID_PaymentParameter, unique_ID_Seat_NoParameter, pre_Ref_IDParameter, result);
        }
    
        public virtual int SP_INSERT_STUDENT_MIGRATION_PRI(string aCTION, string surname, string name, string father_Name, string mother_Name, string address, string mobile_No1, string mobile_No2, string seat_No, string exam, string year, string marks, string percentage, string center_No, string center_Name, string index_No, string school_Name, string copy_Status, Nullable<int> amount, Nullable<int> div_Code, string unique_ID_Payment, string unique_ID_Seat_No, string email_ID, string delivery_Mode, ObjectParameter result)
        {
            var aCTIONParameter = aCTION != null ?
                new ObjectParameter("ACTION", aCTION) :
                new ObjectParameter("ACTION", typeof(string));
    
            var surnameParameter = surname != null ?
                new ObjectParameter("Surname", surname) :
                new ObjectParameter("Surname", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var father_NameParameter = father_Name != null ?
                new ObjectParameter("Father_Name", father_Name) :
                new ObjectParameter("Father_Name", typeof(string));
    
            var mother_NameParameter = mother_Name != null ?
                new ObjectParameter("Mother_Name", mother_Name) :
                new ObjectParameter("Mother_Name", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var mobile_No1Parameter = mobile_No1 != null ?
                new ObjectParameter("Mobile_No1", mobile_No1) :
                new ObjectParameter("Mobile_No1", typeof(string));
    
            var mobile_No2Parameter = mobile_No2 != null ?
                new ObjectParameter("Mobile_No2", mobile_No2) :
                new ObjectParameter("Mobile_No2", typeof(string));
    
            var seat_NoParameter = seat_No != null ?
                new ObjectParameter("Seat_No", seat_No) :
                new ObjectParameter("Seat_No", typeof(string));
    
            var examParameter = exam != null ?
                new ObjectParameter("Exam", exam) :
                new ObjectParameter("Exam", typeof(string));
    
            var yearParameter = year != null ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(string));
    
            var marksParameter = marks != null ?
                new ObjectParameter("Marks", marks) :
                new ObjectParameter("Marks", typeof(string));
    
            var percentageParameter = percentage != null ?
                new ObjectParameter("Percentage", percentage) :
                new ObjectParameter("Percentage", typeof(string));
    
            var center_NoParameter = center_No != null ?
                new ObjectParameter("Center_No", center_No) :
                new ObjectParameter("Center_No", typeof(string));
    
            var center_NameParameter = center_Name != null ?
                new ObjectParameter("Center_Name", center_Name) :
                new ObjectParameter("Center_Name", typeof(string));
    
            var index_NoParameter = index_No != null ?
                new ObjectParameter("Index_No", index_No) :
                new ObjectParameter("Index_No", typeof(string));
    
            var school_NameParameter = school_Name != null ?
                new ObjectParameter("School_Name", school_Name) :
                new ObjectParameter("School_Name", typeof(string));
    
            var copy_StatusParameter = copy_Status != null ?
                new ObjectParameter("Copy_Status", copy_Status) :
                new ObjectParameter("Copy_Status", typeof(string));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(int));
    
            var div_CodeParameter = div_Code.HasValue ?
                new ObjectParameter("Div_Code", div_Code) :
                new ObjectParameter("Div_Code", typeof(int));
    
            var unique_ID_PaymentParameter = unique_ID_Payment != null ?
                new ObjectParameter("Unique_ID_Payment", unique_ID_Payment) :
                new ObjectParameter("Unique_ID_Payment", typeof(string));
    
            var unique_ID_Seat_NoParameter = unique_ID_Seat_No != null ?
                new ObjectParameter("Unique_ID_Seat_No", unique_ID_Seat_No) :
                new ObjectParameter("Unique_ID_Seat_No", typeof(string));
    
            var email_IDParameter = email_ID != null ?
                new ObjectParameter("Email_ID", email_ID) :
                new ObjectParameter("Email_ID", typeof(string));
    
            var delivery_ModeParameter = delivery_Mode != null ?
                new ObjectParameter("Delivery_Mode", delivery_Mode) :
                new ObjectParameter("Delivery_Mode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_INSERT_STUDENT_MIGRATION_PRI", aCTIONParameter, surnameParameter, nameParameter, father_NameParameter, mother_NameParameter, addressParameter, mobile_No1Parameter, mobile_No2Parameter, seat_NoParameter, examParameter, yearParameter, marksParameter, percentageParameter, center_NoParameter, center_NameParameter, index_NoParameter, school_NameParameter, copy_StatusParameter, amountParameter, div_CodeParameter, unique_ID_PaymentParameter, unique_ID_Seat_NoParameter, email_IDParameter, delivery_ModeParameter, result);
        }
    
        public virtual int SP_INSERT_STUDENT_MIGRATION_TRANSFER(string aCTION, string seat_No, Nullable<int> div_Code, string unique_ID_Payment, string unique_ID_Seat_No, Nullable<int> pre_Ref_ID, ObjectParameter result)
        {
            var aCTIONParameter = aCTION != null ?
                new ObjectParameter("ACTION", aCTION) :
                new ObjectParameter("ACTION", typeof(string));
    
            var seat_NoParameter = seat_No != null ?
                new ObjectParameter("Seat_No", seat_No) :
                new ObjectParameter("Seat_No", typeof(string));
    
            var div_CodeParameter = div_Code.HasValue ?
                new ObjectParameter("Div_Code", div_Code) :
                new ObjectParameter("Div_Code", typeof(int));
    
            var unique_ID_PaymentParameter = unique_ID_Payment != null ?
                new ObjectParameter("Unique_ID_Payment", unique_ID_Payment) :
                new ObjectParameter("Unique_ID_Payment", typeof(string));
    
            var unique_ID_Seat_NoParameter = unique_ID_Seat_No != null ?
                new ObjectParameter("Unique_ID_Seat_No", unique_ID_Seat_No) :
                new ObjectParameter("Unique_ID_Seat_No", typeof(string));
    
            var pre_Ref_IDParameter = pre_Ref_ID.HasValue ?
                new ObjectParameter("Pre_Ref_ID", pre_Ref_ID) :
                new ObjectParameter("Pre_Ref_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_INSERT_STUDENT_MIGRATION_TRANSFER", aCTIONParameter, seat_NoParameter, div_CodeParameter, unique_ID_PaymentParameter, unique_ID_Seat_NoParameter, pre_Ref_IDParameter, result);
        }
    
        public virtual int Sp_Payment_Entry(string clientTxnId, string firstName, string email, string spRespStatus, string udf17, string udf18, string udf20, string udf19)
        {
            var clientTxnIdParameter = clientTxnId != null ?
                new ObjectParameter("clientTxnId", clientTxnId) :
                new ObjectParameter("clientTxnId", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("firstName", firstName) :
                new ObjectParameter("firstName", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var spRespStatusParameter = spRespStatus != null ?
                new ObjectParameter("spRespStatus", spRespStatus) :
                new ObjectParameter("spRespStatus", typeof(string));
    
            var udf17Parameter = udf17 != null ?
                new ObjectParameter("udf17", udf17) :
                new ObjectParameter("udf17", typeof(string));
    
            var udf18Parameter = udf18 != null ?
                new ObjectParameter("udf18", udf18) :
                new ObjectParameter("udf18", typeof(string));
    
            var udf20Parameter = udf20 != null ?
                new ObjectParameter("udf20", udf20) :
                new ObjectParameter("udf20", typeof(string));
    
            var udf19Parameter = udf19 != null ?
                new ObjectParameter("udf19", udf19) :
                new ObjectParameter("udf19", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Payment_Entry", clientTxnIdParameter, firstNameParameter, emailParameter, spRespStatusParameter, udf17Parameter, udf18Parameter, udf20Parameter, udf19Parameter);
        }
    
        public virtual ObjectResult<Tbl_Payment> Fun_Sp_HSC_Payment_Entry(string clientTxnId, string firstName, string email, string spRespStatus, string udf17, string udf18, string udf20, string udf19)
        {
            var clientTxnIdParameter = clientTxnId != null ?
                new ObjectParameter("clientTxnId", clientTxnId) :
                new ObjectParameter("clientTxnId", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("firstName", firstName) :
                new ObjectParameter("firstName", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var spRespStatusParameter = spRespStatus != null ?
                new ObjectParameter("spRespStatus", spRespStatus) :
                new ObjectParameter("spRespStatus", typeof(string));
    
            var udf17Parameter = udf17 != null ?
                new ObjectParameter("udf17", udf17) :
                new ObjectParameter("udf17", typeof(string));
    
            var udf18Parameter = udf18 != null ?
                new ObjectParameter("udf18", udf18) :
                new ObjectParameter("udf18", typeof(string));
    
            var udf20Parameter = udf20 != null ?
                new ObjectParameter("udf20", udf20) :
                new ObjectParameter("udf20", typeof(string));
    
            var udf19Parameter = udf19 != null ?
                new ObjectParameter("udf19", udf19) :
                new ObjectParameter("udf19", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Tbl_Payment>("Fun_Sp_HSC_Payment_Entry", clientTxnIdParameter, firstNameParameter, emailParameter, spRespStatusParameter, udf17Parameter, udf18Parameter, udf20Parameter, udf19Parameter);
        }
    
        public virtual ObjectResult<Tbl_Payment> Fun_Sp_HSC_Payment_Entry(string clientTxnId, string firstName, string email, string spRespStatus, string udf17, string udf18, string udf20, string udf19, MergeOption mergeOption)
        {
            var clientTxnIdParameter = clientTxnId != null ?
                new ObjectParameter("clientTxnId", clientTxnId) :
                new ObjectParameter("clientTxnId", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("firstName", firstName) :
                new ObjectParameter("firstName", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var spRespStatusParameter = spRespStatus != null ?
                new ObjectParameter("spRespStatus", spRespStatus) :
                new ObjectParameter("spRespStatus", typeof(string));
    
            var udf17Parameter = udf17 != null ?
                new ObjectParameter("udf17", udf17) :
                new ObjectParameter("udf17", typeof(string));
    
            var udf18Parameter = udf18 != null ?
                new ObjectParameter("udf18", udf18) :
                new ObjectParameter("udf18", typeof(string));
    
            var udf20Parameter = udf20 != null ?
                new ObjectParameter("udf20", udf20) :
                new ObjectParameter("udf20", typeof(string));
    
            var udf19Parameter = udf19 != null ?
                new ObjectParameter("udf19", udf19) :
                new ObjectParameter("udf19", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Tbl_Payment>("Fun_Sp_HSC_Payment_Entry", mergeOption, clientTxnIdParameter, firstNameParameter, emailParameter, spRespStatusParameter, udf17Parameter, udf18Parameter, udf20Parameter, udf19Parameter);
        }
    }
}
